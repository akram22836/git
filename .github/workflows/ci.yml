name: CI

on:
  push:
    branches: [ main, '**' ]
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: acct_user
          POSTGRES_PASSWORD: acct_pass
          POSTGRES_DB: accounting
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Postgres client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      - name: Install deps
        working-directory: backend
        run: |
          cp .env.example .env
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -U acct_user -d accounting; then
              echo "Postgres is ready"; break; fi
            sleep 2
          done
      - name: Run migrations
        working-directory: backend
        env:
          DATABASE_URL: postgresql+psycopg://acct_user:acct_pass@localhost:5432/accounting
        run: |
          alembic upgrade head
      - name: Start backend
        working-directory: backend
        env:
          DATABASE_URL: postgresql+psycopg://acct_user:acct_pass@localhost:5432/accounting
          SECRET_KEY: test_secret
        run: |
          nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 3
      - name: Run tests
        working-directory: backend
        env:
          BASE_URL: http://localhost:8000
        run: |
          pytest -q

  flutter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      - name: Flutter pub get
        working-directory: mobile/flutter_app
        run: flutter pub get
      - name: Flutter analyze
        working-directory: mobile/flutter_app
        run: flutter analyze
